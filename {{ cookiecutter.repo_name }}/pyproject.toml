[build-system]
requires = ["uv_build>=0.6"]
build-backend = "uv_build"

[project]
name = "{{ cookiecutter.repo_name }}"
version = "{{ cookiecutter.project_version }}"
description = "{{ cookiecutter.description }}"

authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.email }}" },
]
maintainers = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.email }}" },
]

requires-python = ">={{ cookiecutter.python_version }}"
readme = "README.md"
license = { file = "LICENSE" }

dependencies = [
    "clu>=0.0.12",
    "jax-ai-stack[grain]>=0.4.9",
    "tf-nightly-cpu>=2.20.0.dev20250214",
]

[project.optional-dependencies]
cuda = ["jax-cuda12-plugin[with-cuda]>=0.6.0"]

[tool.uv.sources]
jax-ai-stack = { git = "https://github.com/jax-ml/jax-ai-stack" }

[dependency-groups]
dev = [
    "jupyter>=1.1.1",
    "matplotlib>=3.10.1",
    "mkdocs-material>=9.6.12",
    "penzai>=0.2.5",
    "pre-commit>=4.2.0",
    "ruff>=0.11.6",
    "pytest>=8.3.5",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle (error)
    "F",   # pyflakes
    "B",   # bugbear
    "B9",
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "I",   # isort
    "UP",  # pyupgrade
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PYI", # flake8-pyi
    "RUF",
]

ignore = [
    # only relevant if you run a script with `python -0`,
    # which seems unlikely for any of the scripts in this repo
    "B011",
    # Leave it to the formatter to split long lines and
    # the judgement of all of us.
    "E501",
]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ty.environment]
python = "./.venv"

[tool.pytest.ini_options]
addopts = "--cov=. --cov-branch --cov-fail-under=75 --cov-report=html --cov-report=term-missing --import-mode=importlib"
norecursedirs = [".*", "__pycache__", "htmlcov"]
pythonpath = "."
python_files = "test__*.py"
testpaths = ["tests"]
